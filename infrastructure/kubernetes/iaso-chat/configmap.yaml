apiVersion: v1
kind: ConfigMap
metadata:
  name: rasa-config
  namespace: iaso-chat
  labels:
    app: rasa-server
    component: configuration
data:
  config.yml: |
    version: "3.1"
    
    # Configuration for RASA Open Source
    recipe: default.v1
    
    # Language model configuration
    language: en
    
    # Pipeline for NLU processing
    pipeline:
      - name: WhitespaceTokenizer
      - name: RegexFeaturizer
      - name: LexicalSyntacticFeaturizer
      - name: CountVectorsFeaturizer
      - name: CountVectorsFeaturizer
        analyzer: char_wb
        min_ngram: 1
        max_ngram: 4
      - name: DIETClassifier
        epochs: 100
        constrain_similarities: true
        model_confidence: linear_norm
        intent_classification: true
        entity_recognition: true
        use_masked_language_model: true
        BILOU_flag: true
      - name: EntitySynonymMapper
      - name: ResponseSelector
        epochs: 100
        constrain_similarities: true
        model_confidence: linear_norm
      - name: FallbackClassifier
        threshold: 0.3
        ambiguity_threshold: 0.1
    
    # Core policies for dialogue management
    policies:
      - name: MemoizationPolicy
        max_history: 5
        augmentation_factor: 20
      - name: RulePolicy
        core_fallback_threshold: 0.3
        core_fallback_action_name: action_default_fallback
        enable_fallback_prediction: true
      - name: UnexpecTEDIntentPolicy
        max_history: 5
        epochs: 100
        constrain_similarities: true
        model_confidence: linear_norm
        mix_up_ratio: 0.2
      - name: TEDPolicy
        max_history: 5
        epochs: 100
        constrain_similarities: true
        model_confidence: linear_norm
        loss_type: cross_entropy
        ranking_length: 10
        entity_recognition: true
        use_masked_language_model: true
        checkpoint_model: true
    
    # Assistant configuration
    assistant_id: iaso_chat_medical_assistant

  domain.yml: |
    version: "3.1"
    
    intents:
      - greet
      - goodbye
      - affirm
      - deny
      - ask_symptoms
      - report_symptoms
      - ask_pain_level
      - report_pain_level
      - ask_medication
      - report_medication
      - ask_allergies
      - report_allergies
      - ask_medical_history
      - report_medical_history
      - ask_appointment
      - schedule_appointment
      - ask_test_results
      - report_test_results
      - ask_emergency
      - report_emergency
      - ask_prescription
      - request_prescription
      - ask_doctor_note
      - provide_patient_id
      - confirm_identity
      - ask_help
      - out_of_scope
    
    entities:
      - patient_id
      - phone_number
      - symptom
      - pain_level
      - medication
      - allergy
      - medical_condition
      - appointment_type
      - date
      - time
      - doctor_name
      - test_type
      - prescription_name
      - dosage
      - frequency
    
    slots:
      patient_id:
        type: text
        influence_conversation: true
      phone_number:
        type: text
        influence_conversation: false
      authenticated:
        type: bool
        influence_conversation: true
      symptoms:
        type: list
        influence_conversation: true
      pain_level:
        type: categorical
        values: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
        influence_conversation: true
      medications:
        type: list
        influence_conversation: true
      allergies:
        type: list
        influence_conversation: true
      medical_history:
        type: list
        influence_conversation: true
      appointment_requested:
        type: bool
        influence_conversation: true
      emergency_level:
        type: categorical
        values: [low, medium, high, critical]
        influence_conversation: true
      conversation_stage:
        type: categorical
        values: [greeting, assessment, information_gathering, recommendation, closing]
        influence_conversation: true
      clinical_context:
        type: any
        influence_conversation: true
    
    responses:
      utter_greet:
        - text: "Hello! I'm your IASO health assistant. How can I help you today?"
          custom:
            voice_emotion: "friendly"
        - text: "Hi there! I'm here to help with your health concerns. What brings you in today?"
          custom:
            voice_emotion: "friendly"
    
      utter_goodbye:
        - text: "Thank you for using IASO health services. Take care and feel better soon!"
          custom:
            voice_emotion: "friendly"
        - text: "Goodbye! Remember to follow up with your healthcare provider if needed."
          custom:
            voice_emotion: "professional"
    
      utter_ask_patient_id:
        - text: "For your security, could you please provide your patient ID?"
          custom:
            voice_emotion: "professional"
    
      utter_ask_symptoms:
        - text: "Can you tell me what symptoms you're experiencing?"
          custom:
            voice_emotion: "empathetic"
        - text: "What brings you in today? Please describe your symptoms."
          custom:
            voice_emotion: "empathetic"
    
      utter_ask_pain_level:
        - text: "On a scale of 1 to 10, with 10 being the worst pain imaginable, how would you rate your pain?"
          custom:
            voice_emotion: "empathetic"
    
      utter_emergency_detected:
        - text: "I understand this is urgent. Let me connect you with emergency services immediately."
          custom:
            voice_emotion: "urgent"
    
      utter_out_of_scope:
        - text: "I'm a health assistant and can help with medical concerns. For other questions, please contact your healthcare provider."
          custom:
            voice_emotion: "professional"
    
    actions:
      - action_authenticate_patient
      - action_collect_symptoms
      - action_assess_emergency
      - action_get_clinical_context
      - action_generate_recommendation
      - action_schedule_appointment
      - action_create_soap_note
      - action_escalate_to_human
    
    forms:
      symptom_assessment_form:
        required_slots:
          - symptoms
          - pain_level
          - medications
          - allergies
    
    session_config:
      session_expiration_time: 60
      carry_over_slots_to_new_session: true

  endpoints.yml: |
    action_endpoint:
      url: "http://rasa-action-server:5055/webhook"
    
    tracker_store:
      type: redis
      url: "redis://redis-session-store:6379"
      password: "${REDIS_PASSWORD}"
      db: 0
    
    models:
      url: "http://rasa-server:5005/models"
      wait_time_between_pulls: 10

  credentials.yml: |
    rest:
      # Configuration for REST channel
      # No additional configuration needed for basic setup
    
    socketio:
      user_message_evt: user_uttered
      bot_message_evt: bot_uttered
      session_persistence: true
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: rasa-training-data
  namespace: iaso-chat
  labels:
    app: rasa-server
    component: training-data
data:
  nlu.yml: |
    version: "3.1"
    
    nlu:
    - intent: greet
      examples: |
        - hello
        - hi
        - hey
        - good morning
        - good afternoon
        - good evening
        - greetings
        - hi there
        - hello there
        - hey there
    
    - intent: goodbye
      examples: |
        - goodbye
        - bye
        - see you later
        - talk to you later
        - have a good day
        - take care
        - farewell
        - bye bye
        - see you
        - until next time
    
    - intent: report_symptoms
      examples: |
        - I have a [headache](symptom)
        - I'm feeling [nauseous](symptom)
        - I have [chest pain](symptom)
        - I'm experiencing [dizziness](symptom)
        - I have a [fever](symptom)
        - I'm having [difficulty breathing](symptom)
        - I have [stomach pain](symptom)
        - I'm feeling [tired](symptom)
        - I have [back pain](symptom)
        - I'm experiencing [joint pain](symptom)
    
    - intent: report_pain_level
      examples: |
        - my pain is [5](pain_level)
        - it's about a [7](pain_level)
        - I'd say [3](pain_level)
        - the pain is [8](pain_level)
        - it's a [10](pain_level)
        - around [4](pain_level)
        - probably [6](pain_level)
        - it's [9](pain_level)
        - about [2](pain_level)
        - I'd rate it [1](pain_level)
    
    - intent: ask_emergency
      examples: |
        - this is an emergency
        - I need immediate help
        - urgent medical attention
        - this is serious
        - I need emergency care
        - life threatening
        - critical situation
        - emergency situation
        - help me now
        - I need a doctor immediately
    
    - intent: provide_patient_id
      examples: |
        - my patient id is [12345](patient_id)
        - patient id [67890](patient_id)
        - my id is [abc123](patient_id)
        - patient number [xyz789](patient_id)
        - id [555999](patient_id)
        - my patient number is [123abc](patient_id)
    
    - intent: out_of_scope
      examples: |
        - what's the weather like
        - tell me a joke
        - what time is it
        - how are you
        - what's your name
        - who created you
        - sing a song
        - tell me about politics
        - what's the news
        - can you cook

  stories.yml: |
    version: "3.1"
    
    stories:
    - story: basic medical consultation
      steps:
      - intent: greet
      - action: utter_greet
      - intent: report_symptoms
      - action: action_collect_symptoms
      - action: utter_ask_pain_level
      - intent: report_pain_level
      - action: action_assess_emergency
      - action: action_generate_recommendation
      - action: utter_goodbye
    
    - story: emergency situation
      steps:
      - intent: greet
      - action: utter_greet
      - intent: ask_emergency
      - action: action_assess_emergency
      - action: utter_emergency_detected
      - action: action_escalate_to_human
    
    - story: patient authentication
      steps:
      - intent: greet
      - action: utter_greet
      - action: utter_ask_patient_id
      - intent: provide_patient_id
      - action: action_authenticate_patient
      - action: utter_ask_symptoms
      - intent: report_symptoms
      - action: action_collect_symptoms

  rules.yml: |
    version: "3.1"
    
    rules:
    - rule: Say goodbye anytime the user says goodbye
      steps:
      - intent: goodbye
      - action: utter_goodbye
    
    - rule: Say hello anytime the user says hello
      steps:
      - intent: greet
      - action: utter_greet
    
    - rule: Handle out of scope questions
      steps:
      - intent: out_of_scope
      - action: utter_out_of_scope
    
    - rule: Handle emergency situations immediately
      steps:
      - intent: ask_emergency
      - action: action_assess_emergency
      - action: utter_emergency_detected
    
    - rule: Authenticate patient when ID is provided
      steps:
      - intent: provide_patient_id
      - action: action_authenticate_patient