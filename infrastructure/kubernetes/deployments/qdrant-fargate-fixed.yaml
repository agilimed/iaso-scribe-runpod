apiVersion: v1
kind: Service
metadata:
  name: qdrant
  namespace: nexuscare-prod
  labels:
    app: qdrant
spec:
  type: ClusterIP
  ports:
    - port: 6333
      targetPort: 6333
      protocol: TCP
      name: http
    - port: 6334
      targetPort: 6334
      protocol: TCP
      name: grpc
  selector:
    app: qdrant

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: qdrant
  namespace: nexuscare-prod
spec:
  serviceName: qdrant
  replicas: 1
  selector:
    matchLabels:
      app: qdrant
  template:
    metadata:
      labels:
        app: qdrant
    spec:
      # Remove init container that causes permission issues on Fargate
      containers:
      - name: qdrant
        image: qdrant/qdrant:v1.7.4
        ports:
        - containerPort: 6333
          name: http
        - containerPort: 6334
          name: grpc
        env:
        - name: QDRANT__SERVICE__HTTP_PORT
          value: "6333"
        - name: QDRANT__SERVICE__GRPC_PORT
          value: "6334"
        - name: QDRANT__LOG_LEVEL
          value: "INFO"
        - name: QDRANT__STORAGE__WAL__WAL_CAPACITY_MB
          value: "32"
        - name: QDRANT__STORAGE__WAL__WAL_SEGMENTS_AHEAD
          value: "0"
        resources:
          requests:
            cpu: "500m"
            memory: "1Gi"
          limits:
            cpu: "2"
            memory: "4Gi"
        volumeMounts:
        - name: qdrant-storage
          mountPath: /qdrant/storage
        livenessProbe:
          httpGet:
            path: /
            port: 6333
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /
            port: 6333
          initialDelaySeconds: 10
          periodSeconds: 10
        # Run as qdrant user (UID 1000) to avoid permission issues
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
  volumeClaimTemplates:
  - metadata:
      name: qdrant-storage
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: gp2  # Use gp2 for better Fargate compatibility
      resources:
        requests:
          storage: 10Gi

---
# Alternative: Use Deployment with EFS for Fargate
apiVersion: apps/v1
kind: Deployment
metadata:
  name: qdrant-deployment
  namespace: nexuscare-prod
spec:
  replicas: 1
  selector:
    matchLabels:
      app: qdrant-deployment
  template:
    metadata:
      labels:
        app: qdrant-deployment
    spec:
      containers:
      - name: qdrant
        image: qdrant/qdrant:v1.7.4
        ports:
        - containerPort: 6333
          name: http
        - containerPort: 6334
          name: grpc
        env:
        - name: QDRANT__SERVICE__HTTP_PORT
          value: "6333"
        - name: QDRANT__SERVICE__GRPC_PORT
          value: "6334"
        - name: QDRANT__STORAGE__STORAGE_PATH
          value: "/qdrant/storage"
        resources:
          requests:
            cpu: "500m"
            memory: "1Gi"
          limits:
            cpu: "2"
            memory: "4Gi"
        volumeMounts:
        - name: qdrant-storage
          mountPath: /qdrant/storage
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
      volumes:
      - name: qdrant-storage
        emptyDir: {}  # Use emptyDir for simplicity on Fargate

---
apiVersion: v1
kind: Service
metadata:
  name: qdrant-deployment
  namespace: nexuscare-prod
spec:
  type: ClusterIP
  ports:
    - port: 6333
      targetPort: 6333
      protocol: TCP
      name: http
    - port: 6334
      targetPort: 6334
      protocol: TCP
      name: grpc
  selector:
    app: qdrant-deployment